{"name":"ngRanger","tagline":"AngularJS native slider, written in typesript","body":"# ngRanger\r\n\r\nThis project is inspired by rzajac/angularjs-slider but written in typescript.\r\n\r\n## Installion\r\n\r\nTo install this package you can use bower:\r\n\r\n    user@machine$:path/to/project~ bower install ng-ranger\r\n\r\nInitialize the module 'ngRanger' into your application\r\n\r\nexample __app.js__\r\n\r\n    angular.module('app',['ngRanger'])\r\n\r\nNow you are ready!\r\n\r\n#### ngRanger\r\n\r\n__Usage:__\r\n\r\nOptions:\r\n\r\n| Option                | Possible Value   | Description                                                     |\r\n| --------------:       |:----------------:| --------------------------------------------------------------- |\r\n| __min__               | number           | Specifies the floor / lowest possible value                     |\r\n| __max__               | number           | Specifies the ceil / highest possible value                     |\r\n| __model__             | number/undefined | Model of the slider                                             |\r\n| __modelHigh__         | number/undefined | Higher Model of the slider                                      |\r\n| __scroll__            | attribute        | If attribute presented lower model will be scrollable           |\r\n| __translateFn__       | function         | A function to format values' label text                         |\r\n| __rangeMinVolume__    | number           | Minimum values (distance) between low and high  model value     |\r\n| __rangeMaxVolume__    | number           | Maximum values (distance) between low and high  model value     |\r\n| __rangeVolume__       | string           | Combined distance in a format _'N:N'_ e.g: _10:40 means the minimum distance is 10 and maximum is 40 between low and high values_  |\r\n| __precision__         | number           | length of .toFixed() when calculating round values. Useful when step is lower than 0 |\r\n| __step__              | number           | distance between 2 valid values on the range. e.g step = 2, the valid values on a 0-10 range: _0, 2, 4, 6, 8, 10_ | \r\n\r\n_html_\r\n\r\n    <ng-ranger min=\"0\" max=\"5\" translate-fn=\"translateFn\" model=\"mySliderModel\"></ng-ranger>\r\n\r\n_js_\r\n\r\n    app.controller('MySingleCtrl', function($scope){\r\n        $scope.mySliderModel = 2;\r\n        $scope.translateFn = function(valueKey){\r\n            return ['Result', valueKey].join(' - ');\r\n        }\r\n    });\r\n\r\n## Custom styling\r\nStyling is written in SCSS so it can be overwrited or even just copied into project.\r\nStyles can be build using command:\r\n\r\n    user@machine$:path/to/ng-ranger~ gulp compile:styles\r\n\r\n## Custom Build\r\nSince the source of the sliders written in typescript you must have installed typescript (1.7) already.\r\nThe build flow is written in gulp so gulp also should be installed.\r\n\r\nTo start build run:\r\n\r\n    user@machine$:path/to/ng-ranger~ gulp build\r\n\r\nThis process will compile typescript file into source javascript file located in __src/js__ , also compiles scss files into css files and outputs to __src/css__ and runs the minification which outputs to __dist/js__ and __dist/css__\r\n","google":"UA-73787982-1","note":"Don't delete this file! It's used internally to help with page regeneration."}